package main

// This program reads a bitmap file as a string (generated by makenummap.go).
// if byte[i]==1 the ith position is considered stored and displayed.
//
// Run makenummap.go first, then this file.
//
// Example based on book Program Pearls (Jon Bentley), Column 1.

import (
	"bytes"
	"fmt"
	"io/ioutil"
	"os"
	"strconv"
)

var mapFile string = "./nummap.txt"
var numbersFile = "./nums.txt"
var fileMode = 4000
var nums bytes.Buffer

func loadNumberMap() error {
	data, err := ioutil.ReadFile(mapFile)
	if err != nil {
		return err
	}
	for i, b := range data {
		if rune(b) == '1' {
			nums.WriteString(strconv.Itoa(i))
			nums.WriteRune('\n')
		}

	}
	fmt.Println("Loaded all mapped values.")
	return nil
}

func main() {
	if err := loadNumberMap(); err != nil {
		fmt.Println(err)
		os.Exit(1)
	}

	err := ioutil.WriteFile(numbersFile, nums.Bytes(), os.FileMode(fileMode))
	if err != nil {
		fmt.Println(err)
		os.Exit(1)
	}
	fmt.Println("Created numers data file", numbersFile, "OK.")

}
