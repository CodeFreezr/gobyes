func join{{.}}Slice(done chan<- struct{}, out chan<- {{.Dot}}, inp ...[]{{.Dot}}) {
	defer close(done)
	for i := range inp {
		for j := range inp[i] {
			out <- inp[i][j]
		}
	}
	done <- struct{}{}
}

// Join{{.}}Slice sends inputs on the given out channel and returns a done channel to receive one signal when inp has been drained
func Join{{.}}Slice(out chan<- {{.Dot}}, inp ...[]{{.Dot}}) (done <-chan struct{}) {
	cha := make(chan struct{})
	go join{{.}}Slice(cha, out, inp...)
	return cha
}
